1) Императивное программирование, баланс эффективность/компактность, звено между человеком и рабочей программой.
2) Системы контроля версий нужны для командной разработки - для того, чтобы команда людей, пишуших один проект,
могла удобно оперировать изменениями в файлах, не нанося вред основному коду,
сохраняя при этом историю всех изменений и информацию о том, кто когда где и какие изменения сделал.
3) Работа с гит организована в виде дерева - какой-то один разработчик "ответвляется" от основного кода,
пишет свои доработке в своей ветке, тестирует ее и "сливает" с основным проектом, улучшая его.
4) Файлы гит могут находиться в состояниях: Untracked, added, modified, conflict modified, stage modified.
5) Ветки следует создавать, если необходимо сначала сделать новые изменения в коде, а потом протестировать их.
Если тестирование пройдено успешно и программа идельно работает, можно влить эту ветку в основную, а если нет,
то продолжать работать в данной ветке по достижение нужного результата работы программы.
